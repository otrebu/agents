{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Read",
      "Write",
      "Edit",
      "MultiEdit",
      "Glob",
      "Grep",
      "TodoRead",
      "TodoWrite",
      "Task",
      "WebSearch",
      "WebFetch",
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git stash:*)",
      "Bash(git merge:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git push origin:*)",
      "Bash(git remote -v)",
      "Bash(gh pr:*)",
      "Bash(gh issue:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm exec:*)",
      "Bash(bun install:*)",
      "Bash(bun add:*)",
      "Bash(bun remove:*)",
      "Bash(bun run:*)",
      "Bash(bun test:*)",
      "Bash(tsc:*)",
      "Bash(tsx:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(biome:*)",
      "Bash(jest:*)",
      "Bash(vitest:*)",
      "Bash(playwright:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(cd:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(fd:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(diff:*)",
      "Bash(wc:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(ps:*)",
      "Bash(top)",
      "Bash(htop)",
      "Bash(which:*)",
      "Bash(test:*)",
      "Bash([:*)",
      "Bash(echo:*)",
      "Bash(xargs cat:*)",
      "Bash(xargs head:*)",
      "Bash(xargs tail:*)",
      "Bash(xargs ls:*)",
      "Bash(xargs wc:*)",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(docker inspect:*)"
    ],
    "deny": [
      "Read(.env*)",
      "Write(.env*)",
      "Edit(.env*)",
      "Read(./secrets/**)",
      "Write(./secrets/**)",
      "Read(~/.ssh/**)",
      "Write(~/.ssh/**)",
      "Read(~/.aws/credentials)",
      "Read(*/secret*.yaml)",
      "Read(*/secret*.json)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/*)",
      "Bash(sudo rm -rf:*)",
      "Bash(mkfs:*)",
      "Bash(dd:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(nc -l:*)",
      "Bash(nmap:*)",
      "Bash(grep -r password:*)",
      "Bash(grep -r api_key:*)",
      "Bash(grep -r secret:*)",
      "Bash(cat /etc/shadow)",
      "Bash(git reset --hard HEAD~:*)",
      "Bash(git clean -fd:*)",
      "Bash(git filter-branch:*)",
      "Bash(git reflog expire:*)",
      "Bash(docker run --privileged:*)",
      "Bash(docker run --pid=host:*)",
      "Bash(docker rm -f:*)",
      "Bash(docker system prune -a:*)",
      "Bash(rm pnpm-lock.yaml)",
      "Bash(rm bun.lockb)",
      "Bash(rm package-lock.json)",
      "Bash(rm yarn.lock)",
      "Write(pnpm-lock.yaml)",
      "Write(bun.lockb)",
      "Bash(psql -c DROP:*)",
      "Bash(mysql -e DROP:*)",
      "Bash(mongosh --eval db.dropDatabase:*)",
      "Bash(redis-cli FLUSHALL)",
      "Bash(apt remove:*)",
      "Bash(brew uninstall:*)",
      "Bash(sudo su:*)",
      "Bash(sudo -i:*)",
      "Bash(sudo bash:*)"
    ],
    "ask": [
      "Bash(git commit --amend:*)",
      "Bash(git rebase:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git branch -D:*)",
      "Bash(docker run:*)",
      "Bash(docker start:*)",
      "Bash(docker stop:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose down:*)",
      "Bash(tar -czf:*)",
      "Bash(zip:*)"
    ]
  },
  "enableAllProjectMcpServers": false,
  "enabledMcpjsonServers": [
    "github",
    "memory"
  ],
  "disabledMcpjsonServers": [
    "filesystem"
  ],
  "alwaysThinkingEnabled": true
}
